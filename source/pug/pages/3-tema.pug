.container

    .header-ecored
        h1 3. El lenguaje unificado de modelado (UML)

    .jumbotron.bg-white    

        .sub-ecored#31 
            h2 3.1 Características
        .jumbotron.color-1         
            .row.justify-content-center.align-items-center
                .col-auto 
                    img.img-a(src="assets/images/pages/ilustraciones/img35.png").img-fluid 
                .col 
                    p UML es un modelo propuesto como estándar de ISO, para la construcción de software orientado a objetos; consta de varios tipos de diagramas interconectados, dentro de los cuales se utilizan elementos del modelo, que sirven  para representar diferentes aspectos de la estructura y la dinámica del software.
 
                    p En este apartado se darán algunas pautas sobre el Lenguaje de Modelado Unificado (UML), el cual es utilizado para el desarrollo de proyectos, cuyo fin es conocer más a fondo los requerimientos del usuario y tener una mejor comunicación con el equipo de desarrollo.         

        img.img-a.mt-5(src="assets/images/pages/ilustraciones/img36.png").img-fluid 

        p.mt-5 UML es ante todo un lenguaje que se centra en la representación gráfica de un sistema. Este lenguaje indica cómo crear y leer los modelos, representando flujos de trabajo en elementos gráficos.

        p Dentro de las características del lenguaje de modelado UML:

        .row.justify-content-center.align-items-center.mt-5 
            .col-11
                .list
                    .list__item
                        .list__item__icon
                            img.img-a(src="assets/images/pages/ilustraciones/ov1.svg").img-fluid  
                    .list__txt    
                        p.m-top #[strong Visualizar:] UML permite modelar de una forma gráfica un sistema de forma que otro lo puede entender.
                .list
                    .list__item
                        .list__item__icon
                            img.img-a(src="assets/images/pages/ilustraciones/ov1.svg").img-fluid  
                    .list__txt    
                        p.m-top #[strong Especificar:] UML permite especificar cuáles son las características de un sistema antes de su desarrollo.
                .list
                    .list__item
                        .list__item__icon
                            img.img-a(src="assets/images/pages/ilustraciones/ov1.svg").img-fluid  
                    .list__txt    
                        p.m-top #[strong Construir:] por medio de los modelos especificados se pueden construir los sistemas diseñados. 
                .list
                    .list__item
                        .list__item__icon
                            img.img-a(src="assets/images/pages/ilustraciones/ov1.svg").img-fluid  
                    .list__txt    
                        p.m-top #[strong Documentar:] los propios elementos gráficos sirven como documentación del sistema desarrollado, lo cual ayudará al mantenimiento de las soluciones conceptuales en el transcurso del tiempo.

        p.mt-5 Un modelo UML está compuesto por tres tipos de bloques de construcción:                          

        .row.justify-content-center.align-items-center.mt-5 
            .col-11
                .list
                    .list__item
                        .list__item__icon
                            img.img-a(src="assets/images/pages/ilustraciones/ov1.svg").img-fluid  
                    .list__txt    
                        p.m-top #[strong Elementos o partes:] los elementos son abstracciones de cosas reales o ficticias (objetos, acciones, personas, sistemas) que pueden relacionarse. Tienen identidad y se distinguen entre ellos.
                .list
                    .list__item
                        .list__item__icon
                            img.img-a(src="assets/images/pages/ilustraciones/ov1.svg").img-fluid  
                    .list__txt    
                        p.m-top #[strong Relaciones o acciones:] relacionan los elementos entre sí, hacen que los sistemas tengan funcionalidad, que adquieran vida.
                .list
                    .list__item
                        .list__item__icon
                            img.img-a(src="assets/images/pages/ilustraciones/ov1.svg").img-fluid  
                    .list__txt    
                        p.m-top #[strong Diagramas o diseños:] reflejan gráficamente el comportamiento y las relaciones entre los elementos.      

        p.mt-5 Todo sistema puede ser representado gráficamente mediante modelos empleando UML el cual soporta   sus diseños usando diagramas   que facilitan el entendimiento, trazabilidad y comprensión entre sus componentes brindando claridad y calidad en la información presentada a los diversos actores involucrados en la distribución de información que requiere ser procesada por un sistema o flujo de trabajo propio de una organización empresarial.                           

        .sub-ecored.mt-5#32 
            h2 3.2 Diagramas tipo UML      

        .jumbotron.color-1         
            .row.justify-content-center.align-items-center
                .col-auto 
                    img.img-a(src="assets/images/pages/ilustraciones/img37.png").img-fluid 
                .col 
                    p En este lenguaje unificado, se toman en cuenta varios diagramas: casos de uso, diagrama de clases, de secuencia, estos son algunos de los más importantes dentro del proceso de desarrollo y que ayudan al analista y al usuario a unificar ideas de lo que se desea implementar.  
        p.mt-5 Un diagrama es la representación gráfica de un conjunto de elementos con sus relaciones, ofreciendo una vista del sistema a modelar. Para poder representar correctamente un sistema, UML ofrece varios tipos de diagramas que permiten visualizar un sistema desde varias perspectivas. UML incluye los siguientes diagramas:

        .header-arrow.py-4.mt-5 
            h3 Diagrama de clases
        p Es el diagrama más común a la hora de describir el diseño de los sistemas orientados a objetos.

        p El diagrama de clases muestra un conjunto de clases, atributos, operaciones, interfaces y sus relaciones.     

        img.img-a.mt-5(src="assets/images/pages/ilustraciones/img38.png").img-fluid 

        .header-arrow.py-4.mt-5 
            h3 Diagrama de actividades
        p El diagrama de actividades permite mostrar la secuencia de las acciones de varios objetos y seleccionar el orden en que se harán las cosas.

        p Representa los procesos de negocios de alto nivel, incluidos el flujo de datos. También puede utilizarse para modelar lógica compleja y/o paralela dentro de un sistema.

        p Un diagrama de actividades es la versión UML de un diagrama de flujo y se usan para analizar procesos.
        img.img-a.mt-5(src="assets/images/pages/ilustraciones/img39.png").img-fluid 

        .header-arrow.py-4.mt-5 
            h3 Diagrama de secuencias      
        p En el diagrama de secuencia se muestran las clases a lo largo de la parte superior y los mensajes enviados entre esas clases, modelando un solo flujo a través de los objetos del sistema. 

        p Un diagrama que representa una interacción, poniendo el foco en la secuencia de los mensajes que se intercambian, junto con sus correspondientes ocurrencias de eventos en las líneas de vida.   
        img.img-a.mt-5(src="assets/images/pages/ilustraciones/img40.png").img-fluid 

        .header-arrow.py-4.mt-5 
            h3 Diagrama de casos de uso 
        p Un diagrama que muestra las relaciones  entre  los  actores  y  el sujeto (sistema), y los casos de uso.

        p Modela la funcionalidad del sistema según la percepción del usuario externo (actor) y las transacciones entre los actores y el sistema.

        p Los diagramas de casos de uso son responsables principalmente de documentar los macrorrequisitos del sistema. Piense en los diagramas de casos de uso como la lista de las funcionalidades que debe proporcionar el sistema.     

        img.img-a.mt-5(src="assets/images/pages/ilustraciones/img41.png").img-fluid 

        .header-arrow.py-4.mt-5 
            h3 Diagrama de componentes
        p Representa los componentes que conforman una aplicación, sistema o empresa. Los componentes, sus relaciones, interacciones y sus interfaces públicas.

        p En esta vista se modelan los componentes del sistema, a partir del cual se construye la aplicación. Son importantes para construir sistemas más grandes a partir de partes pequeñas.            
        img.img-a.mt-5(src="assets/images/pages/ilustraciones/img42.png").img-fluid 

        .header-arrow.py-4.mt-5 
            h3 Diagrama de componentes  
        p.mt-5 Representa los componentes que conforman una aplicación, sistema o empresa. Los componentes, sus relaciones, interacciones y sus interfaces públicas.

        p En esta vista se modelan los componentes del sistema, a partir del cual se construye la aplicación. Son importantes para construir sistemas más grandes a partir de partes pequeñas.

        table.mt-5
            tr  
                td.table-1.text-center Diagrama                      
                td.table-1.text-center Descripción
            
            tr 
                td.table-2 Diagrama de estado
                td.table-2 Un diagrama de estados muestra el estado cambiante o dinámica de un  objeto. Son importantes en el modelado de comportamiento de una interfaz, clase ante los eventos disparadores del objeto. #[br] Cada estado modela un periodo de tiempo, durante la vida de un objeto. Cuando ocurre un evento, se puede desencadenar una transición que lleve el objeto a un nuevo estado.

            tr 
                td.table-3 Diagrama de despliegue físico
                td.table-3 Un diagrama de despliegue físico muestra cómo y dónde se desplegará el sistema. Las máquinas físicas y los procesadores se representan como nodos y la construcción interna puede ser representada por nodos o artefactos embebidos. Como los artefactos  se  ubican  en  los  nodos para modelar el despliegue del sistema, la ubicación es guiada por el uso de las especificaciones de despliegue. #[br]En este tipo de diagrama se muestran los tipos de nodos del sistema y los tipos de componentes que contienen. Aquí el nodo se visualiza como un cubo.                 
            tr 
                td.table-2 Diagrama de objetos
                td.table-2 Un diagrama que presenta los objetos y sus relaciones en un punto en el tiempo. Un diagrama de objetos se puede considerar como un caso especial de un diagrama de clases o un diagrama de comunicaciones.  
            tr 
                td.table-3 Diagrama de estructura de composición
                td.table-3 Representa la estructura interna de un clasificador (tal como una clase, un componente o un caso de uso), incluyendo los puntos de interacción de clasificador con otras partes del sistema. Un uso adicional que se puede dar a los diagramas de estructura compuesta es para mostrar las partes que colaboran, por ejemplo, en un caso de uso. 
            tr 
                td.table-2 Diagrama de paquetes
                td.table-2 Diagrama que permite la organización de elementos de modelado en paquetes y las dependencias entre ellos. Los usos más comunes para los diagramas de paquete son para organizar diagramas de casos de uso y diagramas de clase, a pesar de que el uso de los diagramas de paquete no es limitado a estos elementos UML. 
            tr 
                td.table-3 Diagrama de comunicaciones
                td.table-3 Diagrama que describen los mensajes que transmiten los objetos y muestran las asociaciones que existen entre las clases. Modela las interacciones entre objetos en términos de mensajes en secuencia.                     
            tr 
                td.table-2 Diagrama de tiempos
                td.table-2 Diagrama utilizado para mostrar el cambio en el estado o valor de uno o más objetos en el tiempo o en su línea de vida, en respuesta a los eventos o estímulos recibidos.#[br]Los eventos que se reciben se anotan, a medida  que  muestran  cuándo  se desea mostrar el evento que causa el cambio en la condición o en el estado.               

        .sub-ecored.mt-5#33 
            h2 3.3 Caso de estudio 
        .jumbotron.color-1.mt-5         
            .row.justify-content-center.align-items-center
                .col-auto                     
                    img.img-a(src="assets/images/pages/ilustraciones/img43.png").img-fluid 
                .col 
                    p Para la creación de los diagramas, se plantea un caso de estudio donde podrá identificar varios ejemplos de cómo se desarrollan a partir de situaciones, por ello es necesario que realice una revisión detallada del material formativo. 
                    a(href="media/documentos/Caso_de_estudio.pdf")
                        img.img-a(src="assets/images/pages/ilustraciones/img44.png").img-fluid 
